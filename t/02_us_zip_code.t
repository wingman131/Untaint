#!/usr/bin/perl
use strict;
use Test::More;
use Untaint;

my %test_values = (
	valid => [
		"00611","00693","00962","01072","01258","01375","01460","01545","01566","01936","02123","02132","02839","02915","02919","02940","03037","03447","03837","03862","03873","04013","04020","04062","04105","04108","04256","04357","04424","04429","04568","04660","04735","04761","04863","04903","04951","04956","05154","05460","05775","06035","06281","06512","06540","06612","06723","06757","06817","06857","06904","07001","07003","07012","07029","07405","07421","07730","07746","07836","07926","08006","08043","08067","08109","08640","08721","08734","08831","08871","08872","08879","08880","09009","09212","09350","09604","09605","09742","09874","10027","10069","10099","10119","11426","11542","12024","12108","12420","12450","12455","12475","12543","12723","12788","12849","12854","12978","13052","13087","13120","13309","13313","13326","13401","13637","13662","13730","13732","13833","13859","14008","14067","14167","14203","14563","14603","14644","14647","14819","14839","14889","15250","15253","15378","15612","15617","15634","15680","15831","15949","16041","16159","16375","16411","16508","16849","16868","17007","17032","17051","17097","17104","17221","17552","17769","17821","17953","18084","18088","18224","18254","18323","18407","18415","18822","19526","19550","19702","19713","19946","20049","20066","20213","20216","20551","20566","20747","20762","20775","20854","20892","20904","20911","20914","21034","21133","21157","21212","21223","21411","21541","21542","21701","21776","21813","21851","21867","21916","22003","22060","22211","22308","22463","22544","22646","22701","22735","22736","22853","22968","22973","23003","23014","23068","23081","23093","23170","23407","23511","23519","23601","23603","23805","23889","24143","24184","24347","24351","24368","24370","24422","24433","24448","24538","24563","24580","24593","24622","24630","24808","24848","25060","25103","25180","25234","25267","25437","25523","25691","25701","25704","25708","25712","25726","25943","26278","26321","26561","26591","26815","27016","27104","27117","27360","27520","27813","27847","27872","27887","28243","28247","28253","28255","28318","28326","28363","28364","28380","28394","28408","28510","28544","28564","28610","28676","30655","30820","31022","31087","31305","31501","31763","31779","32148","32180","32305","32428","32537","32602","32611","32662","32723","32764","32817","32910","33021","33052","33060","33190","33222","33231","33321","33461","33484","33486","33498","33526","33631","33715","34101","34237","34251","34654","34660","34777","34948","34949","34991","35049","35055","35087","35094","35114","35231","35236","35295","35473","35772","36141","36205","36343","36427","36439","36577","36610","36759","36779","36803","36907","36919","37037","37075","37118","37171","37187","37241","37247","37249","37303","37621","37723","37755","37819","38028","38049","38077","38469","38601","38720","38866","38870","39082","39150","39175","39232","39309","39465","39521","39730","39870","40018","40049","40060","40117","40160","40255","40476","40581","40816","41048","41377","41465","41477","41564","41653","41817","42084","42151","42276","42347","42408","42635","42638","43109","43135","43260","43322","43406","43416","43734","43738","43935","44036","44057","44109","44506","44509","44659","45015","45330","45344","45475","45645","45694","45735","45743","45875","45886","46075","52407","52540","52551","52594","52729","52747","53016","53040","53049","53138","53571","53588","53783","53803","53824","53940","54009","54174","54308","54432","54541","54625","54741","54766","54944","55025","55102","55126","55191","55306","55349","55352","55357","55393","55403","55427","55485","55559","55929","55979","56014","56057","56212","56455","56482","56513","56710","57024","57103","57224","57227","57252","57312","57369","57402","57457","57461","57638","57742","58061","58236","58275","58317","58319","58402","58422","58643","58651","58701","58775","58849","59027","59070","59276","59314","59602","59736","59820","60001","60026","60151","60165","60178","60187","60204","60548","60565","60567","60612","60961","61016","61028","61048","61411","61433","61437","61451","61470","61547","61553","61639","61653","61731","61754","61831","61924","62026","62224","63177","63744","63945","63956","64001","64088","64124","64170","64436","64733","65231","65239","65258","65282","65335","65580","65767","65772","65809","66095","66512","66621","66749","67030","68732","68850","68930","68949","68950","69033","69343","70036","70063","70427","70503","70549","70584","70712","70807","71135","71213","71219","71261","71323","71658","71766","71922","72010","72070","72086","72379","72440","72445","72464","72466","72532","72534","72639","72670","72762","86405","87012","87048","87118","87190","87193","87327","87511","87521","88012","88265","88349","88550","88585","89045","89103","89166","90034","90036","90090","90630","91077","91496","91604","92405","92414","92415","92589","93061","93121","93305","93452","93483","93519","93670","93905","93927","93928","94028","94126","94130","94156","94209","94503","94537","94549","94551","94555","95470","95488","95497","95526","95565","95639","95654","95668","95726","95812","95820","95851","96759","96795","96810","96824","96913","97036","97239","97333","97429","97477","97532","97533","97622","97838","98077","98087","98177","98199","98208","98220","98260","98278","98385","98527","98575","98833","99016","99029","99101","99143","99549","99603","99609","99626","99637","99653","99654","99711","99784","99950",
		"45242-4854","90210-1234","02345-8989",
	],
	invalid => [
		undef,"","0","123","45242-485","9210-1234","02345-",
		'test@',"1;DROP TABLE users","1'; DROP TABLE users-- 1","' OR 1=1 -- 1","' OR '1'='1",'-','--','--version','--help','$USER','/dev/null; touch /tmp/blns.fail ; echo','`touch /tmp/blns.fail`','$(touch /tmp/blns.fail)','@{[system "touch /tmp/blns.fail"]}','$HOME',"\$ENV{'HOME'}",'%d','%s','{0}','%*.*s','plainaddress','#@%^%#$@#$@#.com','List of Strange Invalid Email Addresses','â€œ(),:;<>[\\]@example.com',
	],
);

plan tests => scalar(@{$test_values{valid}}) + scalar(@{$test_values{invalid}});

foreach my $test_str (@{$test_values{valid}})
{
	ok(defined(Untaint::us_zip_code($test_str)), "valid: $test_str");
}

foreach my $test_str (@{$test_values{invalid}})
{
	ok(! defined(Untaint::us_zip_code($test_str)), "invalid: $test_str");
}

done_testing();
